{
  "author": {
    "name": "Lajos Koszti",
    "email": "ajnasz@ajnasz.hu",
    "url": "http://ajnasz.hu"
  },
  "name": "ajncookie",
  "description": "A very basic cookie setter and getter",
  "version": "0.0.5",
  "repository": {
    "type": "git",
    "url": "git://github.com/Ajnasz/ajncookie.git"
  },
  "scripts": {
    "test": "jake"
  },
  "licence": "MIT",
  "dependencies": {},
  "devDependencies": {
    "jake": ">=0.3.11",
    "jslint": ">=0.1.9"
  },
  "optionalDependencies": {},
  "readme": "A very simple cookie manager\n\n\nsetCookie(res, cookie, val, expiration, domain, secure, httpOnly, path)\n    void\n    Sets a cookie header into the http response\n\n  res:\n        type: http.ServerResponseobject\n                (see http://nodejs.org/api/http.html#http_class_http_serverresponse)\n        which passed to each http request\n\n    cookie:\n        type: string\n        Name of the cookie\n\n    val:\n        type: string\n        The value of the cookie\n\n    expiration:\n        type: Date\n        optional\n        a date which defines when the cookie must expire\n\n    domain:\n        type: string\n        optional\n        the scope of the cookie, tells the browser that cookies should only be\n        sent back to the server for the given domain\n\n    secure:\n        type: boolean\n        optional\n        The Secure attribute is meant to keep cookie communication limited to\n        encrypted transmission\n\n    httpOnly:\n        optional\n        The HttpOnly attribute directs browsers to use cookies via the HTTP\n        protocol only.\n\n    path:\n        type: string\n        optional\n        the scope of the cookie, tells the browser that cookies should only be\n        sent back to the server for the given path\n\n\ngetCookie(req, cookieName)\n    returns string\n    Gets a cookie from the http request\n\n    req:\n        type: http.ClientRequest\n                (see http://nodejs.org/api/http.html#http_class_http_clientrequest)\n        which passed to each http request\n\n    cookieName:\n        type: string\n        The name of the cookie which value need to be returned\n\n\ndelCookie(res, cookie, domain, secure, httpOnly, path)\n    void\n    Sets the 'Set-Content' http header to request the browser to delete the given cookie\n    Basically sets the expiration to a past date\n\n    res:\n        type: http.ServerResponseobject\n                (see http://nodejs.org/api/http.html#http_class_http_serverresponse)\n        which passed to each http request\n\n    cookie:\n        type: string\n        Name of the cookie\n\n    val:\n        type: string\n        The value of the cookie\n\n    domain:\n        type: string\n        optional\n        the scope of the cookie, tells the browser that cookies should only be\n        sent back to the server for the given domain\n\n    secure:\n        type: boolean\n        optional\n        The Secure attribute is meant to keep cookie communication limited to\n        encrypted transmission\n\n    httpOnly:\n        optional\n        The HttpOnly attribute directs browsers to use cookies via the HTTP\n        protocol only.\n\n    path:\n        type: string\n        optional\n        the scope of the cookie, tells the browser that cookies should only be\n        sent back to the server for the given path\n\n\nExample of usage:\n\nvar cookie = require('ajncookie');\n\nhttp.createServer((function () {\n    return function (req, res) {\n        // set the foo cookie if not set yet\n        if (!cookie.getCookie(req, 'foo')) {\n            cookie.setCookie(res, 'foo', 'bar', null, null, false, true, '/');\n        }\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('OK');\n    };\n}()));\nsrv.listen(1111, '127.0.0.1');\n",
  "readmeFilename": "README",
  "bugs": {
    "url": "https://github.com/Ajnasz/ajncookie/issues"
  },
  "_id": "ajncookie@0.0.5",
  "dist": {
    "shasum": "e41ca8bb07a57f8e5bc23f246f9e8e60f5ac4b03",
    "tarball": "http://registry.npmjs.org/ajncookie/-/ajncookie-0.0.5.tgz"
  },
  "_from": "ajncookie@*",
  "_npmVersion": "1.3.6",
  "_npmUser": {
    "name": "ajnasz",
    "email": "ajnasz@ajnasz.hu"
  },
  "maintainers": [
    {
      "name": "ajnasz",
      "email": "ajnasz@ajnasz.hu"
    }
  ],
  "directories": {},
  "_shasum": "e41ca8bb07a57f8e5bc23f246f9e8e60f5ac4b03",
  "_resolved": "https://registry.npmjs.org/ajncookie/-/ajncookie-0.0.5.tgz"
}
